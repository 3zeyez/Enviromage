<?php

/**
 * @file
 * This file shows that I could implement a hook
 */

use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_cron()
 */
function php_memory_readiness_checker_cron(): void {
  \Drupal::messenger()->addMessage(t("Hello from php_memory_readiness_checker cron hook"));
}

/**
 * Implements hook_form_alter().
 */
function php_memory_readiness_checker_form_alter(&$form, FormStateInterface $form_state, $form_id): void {
//  \Drupal::messenger()->addMessage(t("form_id of this form is @id", ['@id' => $form_id]));
  if ($form_id == 'node_article_edit_form') {
    $form['actions']['submit']['#value'] = t("Save this awesome article!");
  }
  if ($form_id === 'composer_run') {
    echo "HI";
  }
}

/**
 * Implements hook_theme().
 */
function php_memory_readiness_checker_theme($existing, $type, $theme, $path) {
  return [
    'php_memory_readiness_checker' => [
      'variables' => [
        'environment_configuration' => 'Default Value',
        'modules_size' => '',
        'each_module' => '',
      ],
    ],

    'composer_command' => [
      'variables' => [
        'result' => [],
      ],
    ],

    'modules_size' => [
      'variables' => [
        'modules_size' => '',
        'each_module' => '',
      ],
    ],

    'environment_configuration' => [
      'variables' => [
        'environment_configuration' => 'Default Value',
      ],
    ],
  ];
}

function print_array_recursive($array, $indent = '') {
  foreach ($array as $key => $value) {
    echo $indent . $key . ': ';
    if (is_array($value)) {
      print_array_recursive($value, $indent . '  ');
    } else {
      echo $value;
    }
    echo "</br>";
  }
}

/**
 * Implements hook_module_implements_alter
 */
//function php_memory_readiness_checker_module_implements_alter(&$implementations, $hook) {
////  echo "<pre>";
////  $number_of_elements = count($implementations);
////  echo "${number_of_elements} </br>";
////  print_array_recursive($implementations);
//  if (isset($implementations['automatic_updates'])) {
//    echo '$implementations[\'automatic_updates\'] is setted.</br>';
//    if (is_array($implementations['automatic_updates']))
//      print_array_recursive($implementations['automatic_updates']);
//    else
//      echo $implementations['automatic_updates'];
//  }
////  echo "</pre>";
//  \Drupal::messenger()->addMessage(t("\$hook == $hook"));
//  if ($hook == 'hook_help') {
//    // Add your custom module's implementation of the target module's hook
//    $memory_peak_usage =  memory_get_peak_usage(true);
//    \Drupal::messenger()->addMessage(t("The memory usage of $hook hook is @u",
//      ['@u' => $memory_peak_usage]));
////    array_unshift($implementations, 'php_memory_readiness_checker');
////    $implementations['automatic_updates'] = function() use () {};
//  }
//}

/**
 * Implements hook_requirements().
 */
function php_memory_readiness_checker_name_requirements($phase) {
  $requirements = [];

  // Check for custom error condition.
    $requirements['php_memory_readiness_checker_error'] = [
      'title' => t('Error For Free XDD!'),
      'severity' => REQUIREMENT_ERROR,
      'description' => t('There is an error in your custom module.'),
    ];

  return $requirements;
}
